{"version":3,"file":"pinia-persistedstate.js","sources":["../node_modules/.pnpm/deepmerge@4.2.2/node_modules/deepmerge/dist/cjs.js","../src/index.ts","../node_modules/.pnpm/shvl@2.0.3/node_modules/shvl/dist/shvl.mjs"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { Store, PiniaPluginContext, MutationType } from 'pinia'\r\nimport merge from 'deepmerge'\r\nimport * as shvl from 'shvl'\r\n\r\nconst NOOP = () => {\r\n  return\r\n}\r\n\r\nconst isNotEmptyArray = (arr) => Array.isArray(arr) && arr.length > 0\r\n\r\ninterface Storage {\r\n  getItem: (key: string) => any\r\n  setItem: (key: string, value: any) => void\r\n  removeItem: (key: string) => void\r\n}\r\n\r\ninterface Options {\r\n  key?: string\r\n  paths?: string[]\r\n  reducer?: (state: any, paths: string[]) => object\r\n  subscriber?: (store: Store) => (handler: (mutation: any, state: any) => void) => void\r\n  storage?: Storage\r\n  getState?: (key: string) => any\r\n  setState?: (key: string, state: any) => void\r\n  filter?: (mutation: MutationType) => boolean\r\n  arrayMerger?: (state: any[], saved: any[]) => any\r\n  rehydrated?: (store: Store) => void\r\n  fetchBeforeUse?: boolean\r\n  overwrite?: boolean\r\n  assertStorage?: (storage: Storage) => void | Error\r\n}\r\n\r\nexport default function (options: Options = {}): (context: PiniaPluginContext) => void {\r\n  const storage = options.storage || (window && window.localStorage)\r\n  const key = options.key || 'pinia'\r\n\r\n  function getState(key) {\r\n    const value = storage.getItem(key)\r\n\r\n    try {\r\n      return typeof value === 'string'\r\n        ? JSON.parse(value)\r\n        : typeof value === 'object'\r\n        ? value\r\n        : undefined\r\n    } catch (err) {}\r\n\r\n    return undefined\r\n  }\r\n\r\n  function setState(key, state) {\r\n    return storage.setItem(key, JSON.stringify(state))\r\n  }\r\n\r\n  function filter() {\r\n    return true\r\n  }\r\n\r\n  function reducer(state, paths: Array<string>) {\r\n    return isNotEmptyArray(paths)\r\n      ? paths.reduce(function (substate, path) {\r\n          return shvl.set(substate, `${path}`, shvl.get(state, path))\r\n        }, {})\r\n      : state\r\n  }\r\n\r\n  function subscriber(store) {\r\n    return function (handler) {\r\n      return store.$subscribe(handler)\r\n    }\r\n  }\r\n\r\n  const assertStorage =\r\n    options.assertStorage ||\r\n    (() => {\r\n      storage.setItem('@@', '1')\r\n      storage.removeItem('@@')\r\n    })\r\n\r\n  assertStorage(storage)\r\n\r\n  const fetchSavedState = () => (options.getState || getState)(key)\r\n\r\n  let savedState\r\n\r\n  if (options.fetchBeforeUse) {\r\n    savedState = fetchSavedState()\r\n  }\r\n\r\n  return function ({ store, pinia }: PiniaPluginContext) {\r\n    if (!options.fetchBeforeUse) {\r\n      savedState = fetchSavedState()\r\n    }\r\n\r\n    if (typeof savedState === 'object' && savedState !== null) {\r\n      const id = store.$id\r\n      if (savedState[id]) {\r\n        store.$state = options.overwrite\r\n          ? savedState\r\n          : merge(store.$state, savedState[id], {\r\n              arrayMerge:\r\n                options.arrayMerger ||\r\n                function (store, saved) {\r\n                  return saved\r\n                },\r\n              clone: false\r\n            })\r\n        ;(options.rehydrated || NOOP)(store)\r\n      }\r\n    }\r\n\r\n    ;(options.subscriber || subscriber)(store)(function (mutation, state) {\r\n      const pState = pinia.state.value\r\n      const id = store.$id\r\n      if (!options.fetchBeforeUse) {\r\n        savedState = fetchSavedState()\r\n      }\r\n      if ((options.filter || filter)(mutation)) {\r\n        const newState = merge(\r\n          savedState,\r\n          isNotEmptyArray(options.paths)\r\n            ? (options.reducer || reducer)(\r\n                pState,\r\n                (options.paths as Array<string>).filter((_) => _.indexOf(id) !== -1)\r\n              )\r\n            : pState,\r\n          {\r\n            arrayMerge:\r\n              options.arrayMerger ||\r\n              function (store, saved) {\r\n                return saved\r\n              },\r\n            clone: false\r\n          }\r\n        )\r\n        ;(options.setState || setState)(key, newState)\r\n      }\r\n    })\r\n  }\r\n}\r\n","function t(t,r,e){return void 0===(t=(r.split?r.split(\".\"):r).reduce(function(t,r){return t&&t[r]},t))?e:t}function r(t,r,e,n){return!/^(__proto__|constructor|prototype)$/.test(r)&&((r=r.split?r.split(\".\"):r.slice(0)).slice(0,-1).reduce(function(t,r){return t[r]=t[r]||{}},t)[r.pop()]=e),t}export{t as get,r as set};\n//# sourceMappingURL=shvl.mjs.map\n"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","NOOP","isNotEmptyArray","arr","length","storage","window","localStorage","getState","getItem","JSON","parse","undefined","err","setState","state","setItem","stringify","reducer","paths","substate","path","t","r","e","n","test","split","slice","pop","shvl","subscriber","store","handler","$subscribe","assertStorage","removeItem","savedState","fetchSavedState","fetchBeforeUse","pinia","id","$id","$state","overwrite","merge","arrayMerger","saved","rehydrated","mutation","pState","newState","indexOf"],"mappings":"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"}